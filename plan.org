#+OPTIONS: ^:nil
#+author: Sami Badawi
#+title: Plan
#+description: Overall current plan not generated by agenda, maybe some current goals.

This doesn't fit with GTD. But it is an overview page that is not generated.

* Purpose

 - Overview
 - Goals
 - Compare different tasks
 - Things can be split out

* Tax and baking [3/6][50%]
** DONE Update Fidelity
   CLOSED: [2020-05-10 Sun 16:15] DEADLINE: <2020-05-10 Sun>

** TODO Contact Fidelity
   DEADLINE: <2020-05-10 Sun>

** DONE Activate credit card
   CLOSED: [2020-05-10 Sun 15:18] DEADLINE: <2020-05-10 Sun>

** DONE Activate debit card
   CLOSED: [2020-05-10 Sun 15:18] DEADLINE: <2020-05-10 Sun>

** TODO Get TAX pin
   DEADLINE: <2020-05-10 Sun>

** TODO Send TAX pin to Rita

* TODO Organize photos

Maybe I can also do this inside org mode.

* Code projects

** TODO Do more Haskell

What should I do?

** Try some Emacs Lisp
 
I always wanted to learn a Lisp now I have a bit of use for it.

On the other hand I understand it well enough 

** Racket

** TODO Most fun project now

If I want to do the photo organizer should I do it in F# or in Haskell.

I feel that I have not quite finished with my Haskell phase.

I thought that F# was cool, but it was not that interesting.

It was good to get back into the Windows world.

It is possible that there are ML tools that I want to play with that are working better in .NET.

Once I start.

*** Where should this live?

Possibly under photo.

Maybe this is just putting me back to a computer vision project.

* Photo organize as a vision project

I think this is the top idea now.

** Simple approach

I really only need to be able to read metadata.

I don't exactly need the ML code.


* Utility of F# vs. Haskell

I know both to a level where I can work in them.

** What would I get from Haskell

 - Cement my proficiency I am almost there
 - More fun to write Haskell code
 - Cross platform scripts
 - More lightweight

What do I want from Haskell?

I think that this is interesting but knowing it better is not doing much for my daily work.

I found this Haskell binding to PyTorch. 
https://github.com/hasktorch/hasktorch

It is pre beta but under very active development.

Windows 2004 should be released soon.

So I will have to try it out on my MacBook Pro first.

Maybe I should read some code first.

** What would I get from F#

 - Access to ML code
 - Easier access to Onedrive
 - Possibly add a GUI

The ML code looks good and simpler, but it is not one of the major libs.


** Choice

It is possible that I should continue with Haskell for a little while.

Dumping it now right when I am in good shape seems a little silly.



* Math

** TODO Finish category theory video

I got pretty far.

* Setup org mode [3/3][100%]

Should I back port or just do new work here?

 - [X] Port the most important general things
 - [X] Port Haskell table CLI
 - [X] Find out how to organize the projects






